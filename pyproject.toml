[tool.poetry]
name = "quart-wtforms"
version = "1.0.1"
description = "Simple Integration of Quart and WTForms."
authors = ["Chris Rood <quart.addons@gmail.com>"]
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
readme = "README.md"
homepage = "https://github.com/Quart-Addons/quart-wtf"
repository = "https://github.com/Quart-Addons/quart-wtf"
documentation = "https://quart-wtf.readthedocs.io/en/latest/"
packages = [{include = "quart_wtf"}]

[tool.poetry.dependencies]
python = ">=3.8"
quart = "^0.19"
WTForms = "^3.0"
quart-uploads = "^0.0.2"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.2"
pytest-asyncio = "*"
Sphinx = ">=3.4 <6.0.0"
pydata-sphinx-theme = "^0.13.3"
quart-babel = ">=1.0.2"

[tool.black]
line-length = 100

[tool.isort]
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "quart_wtf, tests"
line_length = 100
multi_line_output = 3
no_lines_before = "LOCALFOLDER"
order_by_type = false
reverse_relative = true

[tool.mypy]
allow_redefinition = true
disallow_any_generics = false
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_defs = true
implicit_reexport = true
no_implicit_optional = true
show_error_codes = true
strict = true
strict_equality = true
strict_optional = false
warn_redundant_casts = true
warn_return_any = false
warn_unused_configs = true
warn_unused_ignores = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
